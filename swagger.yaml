openapi: 3.0.3
info:
  title: Cornerstone
  version: 1.0.0
servers:
  - url: https://apicompanion-dev.bytequest.solutions/api/v1
tags:
  - name: Signup and Login
    description: Authentication Management
  - name: Google Authentication
    description: Google Authentication Management
  - name: Password
    description: Password Reset Management
  - name: Users
    description: User Management
paths:
  /auth/register:
    post:
      tags:
        - Signup and Login
      operationId: Signup
      requestBody:
        content:
          application/json:
            schema:
              required:
                - name
                - email
                - password
                - studentId
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: John.Doe@gmail.com
                studentId:
                  type: string
                  example: some-student-id
                password:
                  type: string
                  example: $1234abcd
      responses:
        "200":
          description: Registered Successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /auth/login:
    post:
      tags:
        - Signup and Login
      operationId: Login
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
                - password
              type: object
              properties:
                email:
                  type: string
                  example: John.Doe@gmail.com
                password:
                  type: string
                  example: $1234abcd
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Login"
                  message:
                    type: string

  /auth/google:
    get:
      tags:
        - Google Authentication
      operationId: Google Redirect URL
      description: Redirect to the Google Login Page
      responses:
        "200":
          description: Successful Operation
    post:
      tags:
        - Google Authentication
      operationId: Google Signup or Login
      description: Google Signup or Login
      requestBody:
        content:
          application/json:
            schema:
              required:
                - code
              type: object
              properties:
                code:
                  type: string
                  example: 4/0AeaYSHCoSLQlzCvmwNfx_purqgyrLWJ2l2JvhmpRW9-amog1Suymw6HL64lKDfOYadviPg
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Login"
                  message:
                    type: string

  /auth/forget-password:
    post:
      tags:
        - Password
      operationId: Forget Password
      description: Send a Password Reset Link to Provided Email
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
              type: object
              properties:
                email:
                  type: string
                  example: John.Doe@gmail.com
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /auth/reset-password:
    post:
      tags:
        - Password
      operationId: Reset Password
      description: Changes the Password of the User Who Requested to Reset the Password
      requestBody:
        content:
          application/json:
            schema:
              required:
                - token
                - password
              type: object
              properties:
                token:
                  type: string
                  example: 1I69UCa0BxqtIYVx23Lc
                password:
                  type: string
                  example: $1234abcd
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /auth/validate-token:
    post:
      tags:
        - Password
      operationId: Validate Token
      description: Validates the token from forget password email
      requestBody:
        content:
          application/json:
            schema:
              required:
                - token
              type: object
              properties:
                token:
                  type: string
                  example: 1234
      responses:
        '200':
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  errors:
                    type: array

  /profile:
    get:
      tags:
        - Users
      operationId: User Profile
      description: User's All Information
      security:
        - bearerAuth: [ ]
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Profile"
    put:
      tags:
        - Users
      operationId: Update User Profile
      description: Update User's Email and Name
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
                - name
              type: object
              properties:
                email:
                  type: string
                  example: John.Doe@gmail.com
                name:
                  type: string
                  example: "John Doe"
                phoneNumber:
                  type: string
                  example: +1234567890
                about:
                  type: string
                  example: "something about the user"
                avatar:
                  type: string
                  example: "avatar/uploaded-file-name.jpg"
                background:
                  type: string
                  example: "background/uploaded-file-name.jpg"
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /profile/upload:
    post:
      tags:
        - Users
      operationId: Upload user avatar or background image
      description: Upload user avatar or background image
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                imageType:
                  type: string
                  example: avatar,background
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      fileName:
                        type: string
                        example: File name to be used in create post as attachment
                      url:
                        type: string
                        example: https://path-to-image.com
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Validation error occurred.
                  errors:
                    type: object
  /posts:
    get:
      tags:
        - Posts
      operationId: Feed
      description: Latest visible posts for user with pagination and filter for user
      security:
        - bearerAuth: [ ]
      parameters:
        - name: page
          in: query
          description: The page of the content
          required: false
          schema:
            type: string
            example: some-generated-uuid
        - name: perPage
          in: query
          description: The amount of the posts in one request
          required: false
          schema:
            type: string
            example: some-generated-uuid
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Post"
                  meta:
                    $ref: "#/components/schemas/Meta"
    post:
      tags:
        - Posts
      operationId: Create Post
      description: Create a new post
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: Some example content for your post
                visibility:
                  type: string
                  example: Public,Private
                attachments:
                  type: array
                  items:
                    type: string
                    example: Get the filename from upload attachments endpoint
                type:
                  type: string
                  example: Social,Marketplace,Coop
      security:
        - bearerAuth: [ ]
      responses:
        "201":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Post"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Validation error occurred.
                  errors:
                    type: object
  /posts/event:
    post:
      tags:
        - Posts
      operationId: Create Event
      description: Create a new post with the type of event
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: Some post or event content
                attachments:
                  type: array
                type:
                  type: string
                  example: InPerson,Online
                visibility:
                  type: string
                  example: Public,Private
                eventName:
                  type: string
                  example: Some event name
                externalLink:
                  type: string
                  example: https://google.com
                location:
                  type: string
                  example: Canada, Vancouver, etc.
                startDate:
                  type: string
                  example: "2024-03-24 05:09:30.709 +0330 +0330"
                endDate:
                  type: string
                  example: "2024-03-24 05:09:30.709 +0330 +0330"
      security:
        - bearerAuth: [ ]
      responses:
        "201":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Event"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Validation error occurred.
                  errors:
                    type: object
  /posts/{post_id}:
    get:
      tags:
        - Posts
      operationId: Fetch Post
      description: Fetch a post with the given ID
      security:
        - bearerAuth: [ ]
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Post"
        "404":
          description: Post Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Requested resource not found
    put:
      tags:
        - Posts
      operationId: Update Post
      description: Update an existing post of the user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: Some example content for your post
                visibility:
                  type: string
                  example: Public,Private
                attachments:
                  type: array
                  items:
                    type: string
                    example: Get the filename from upload attachments endpoint
      security:
        - bearerAuth: [ ]
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Event"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Validation error occurred.
                  errors:
                    type: object
        "403":
          description: User does not have access to modify the post
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access to the resource is forbidden for this user
        "404":
          description: Post does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
    delete:
      tags:
        - Posts
      operationId: Delete Post
      description: Delete an existing post of the user
      security:
        - bearerAuth: [ ]
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Event"
        "404":
          description: Post Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
        "403":
          description: User does not have access to modify the post
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access to the resource is forbidden for this user
  /posts/{post_id}/event:
    put:
      tags:
        - Posts
      operationId: Update Post With Event Type
      description: Update an existing event of the user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: Some post or event content
                visibility:
                  type: string
                  example: Public,Private
                attachments:
                  type: array
                type:
                  type: string
                  example: InPerson,Online
                eventName:
                  type: string
                  example: Some event name
                externalLink:
                  type: string
                  example: https://google.com
                location:
                  type: string
                  example: Canada, Vancouver, etc.
                startDate:
                  type: string
                  example: "2024-04-28T20:21:26.854076419Z"
                endDate:
                  type: string
                  example: "2024-04-28T20:21:26.854076419Z"
      security:
        - bearerAuth: [ ]
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Event"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Validation error occurred.
                  errors:
                    type: object
        "403":
          description: User does not have access to modify the post
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access to the resource is forbidden for this user
        "404":
          description: Post does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
  /posts/{post_id}/attendees:
    get:
      tags:
        - Posts
      operationId: Get Attendees
      description: Get Attendees of a post
      security:
        - bearerAuth: [ ]
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: some-generated-uuid
                        name:
                          type: string
                          example: John Doe
                        title:
                          type: string
                          example: Backend Developer
                        avatar:
                          type: string
                          example: https://url-to-avatar.com
                        attendDate:
                          type: string
                          example: "2024-04-28T20:21:26.854076419Z"
  /posts/{post_id}/attend:
    patch:
      tags:
        - Posts
      description: Attend To An Event
      operationId: Attend to a post with event type
      security:
        - bearerAuth: [ ]
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Resource has been updated successfully.
        "409":
          description: User Attended Before
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User has been attended to this event before
        "403":
          description: User cannot attend to regular post
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Access to the resource is forbidden for this user
        "404":
          description: Post does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The requested resource not found.
  /posts/attachments/upload:
    post:
      tags:
        - Posts
      description: Upload Post Attachment
      operationId: Upload attachment to use in a post
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                attachment:
                  type: string
                  format: binary
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      fileName:
                        type: string
                        example: File name to be used in create post as attachment
                      url:
                        type: string
                        example: https://path-to-image.com
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Validation error occurred.
                  errors:
                    type: object

  /comments:
    post:
      tags:
        - Comments
      description: Create Comment
      operationId: CreateComment
      responses:
        "200":
          description: Operation Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: resource has been created successfully
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  example: some comment body
                postID:
                  type: string
                  example: some-generated-uuid
                parentID:
                  type: string
                  example: some-generated-uuid(nullable)
    get:
      tags:
        - Comments
      description: Fetch Comments
      operationId: FetchComments
      responses:
        "200":
          description: Operation Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  parent:
                    $ref: "#/components/schemas/Comment"
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Comment"
                  meta:
                    $ref: "#/components/schemas/Meta"
      parameters:
        - name: post_id
          in: query
          description: The post you wanna fetch comments from
          required: true
          schema:
            type: string
            example: some-generated-uuid
        - name: parent_id
          in: query
          description: The parent which you wanna see its children in the post
          required: false
          schema:
            type: string
            example: some-generated-uuid
  /comments/{comment_id}:
    put:
      tags:
        - Comments
      description: Update Comment
      operationId: UpdateComment
      responses:
        "200":
          description: Operation Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: resource has been updated successfully
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  example: some comment body
    delete:
      tags:
        - Comments
      description: Delete Comment
      operationId: DeleteComment
      responses:
        "200":
          description: Operation Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: resource has been deleted successfully
  /reactions:
    post:
      tags:
        - Reactions
      description: React to a reactive
      operationId: ReactToReactive
      responses:
        "200":
          description: Operation Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: resource has been created successfully
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Validation error occurred.
                  errors:
                    type: object
        "409":
          description: User has already reacted to it
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: You already reacted to this resource
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reactiveType:
                  type: string
                  example: Comment,Post
  /reactions/{reactive_id}:
    post:
      tags:
        - Reactions
      description: Remove reaction from a resource
      operationId: RemoveReactionFromResource
      responses:
        "200":
          description: Operation Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: resource has been deleted successfully
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Validation error occurred.
                  errors:
                    type: object
        "404":
          description: Post Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Requested resource not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reactions:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: some-uuid
                      reactiveType:
                        type: string
                        example: Post,Comment
                      reactionType:
                        type: string
                        example: Like
components:
  schemas:
    Login:
      type: array
      items:
        type: object
        properties:
          accessToken:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJFbWFpbCI6ImhzYW1pZC5hYWgwQGdtYWlsLmNvbSIsIklEIjoiMGFmMTI5ODMtODMzZS00ZDQ0LWJkMzAtNDczOWUyZjBjYmYyIiwiZXhwIjoxNzA5NDY3NjM2LCJpYXQiOjE3MDk0NjA0MzYsImlzcyI6Im1vaGFtbWFkIn0.eU6UyDmdVlIWnuOVQyLi8iVci6WQFa1Tjxl7FMEcQ2U
    Profile:
      type: object
      properties:
        id:
          type: string
          example: some-generated-uuid
        name:
          type: string
          example: John Doe
        email:
          type: string
          example: John.Doe@gmail.com
        about:
          type: string
          example: "something about the user"
        phoneNumber:
          type: string
          example: +1234567890
        avatar:
          type: string
          example: "url to the avatar"
        background:
          type: string
          example: "url to the background image"
        studentId:
          type: string
          example: some-student-id
        createdAt:
          type: string
          example: "2024-04-28T20:21:26.854076419Z"
    Event:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            example: some-generated-uuid
          userID:
            type: string
            example: some-generated-uuid
          visibility:
            type: string
            example: Public,Private
          type:
            type: string
            example: Post,Event
          createdAt:
            type: string
            example: "2024-04-28T20:21:26.854076419Z"
          commentsCount:
            type: integer
            example: 0
          reactionsCount:
            type: integer
            example: 0
          reaction:
            type: boolean
            example: false
          payload:
            type: object
            properties:
              content:
                type: string
                example: Some post or event content
              attachments:
                type: array
              type:
                type: string
                example: InPerson,Online
              eventName:
                type: string
                example: Some event name
              externalLink:
                type: string
                example: https://google.com
              location:
                type: string
                example: Canada, Vancouver, etc.
              startDate:
                type: string
                example: "2024-04-28T20:21:26.854076419Z"
              endDate:
                type: string
                example: "2024-04-28T20:21:26.854076419Z"
              attendees:
                type: array
                items:
                  type: object
                  properties:
                    userId:
                      type: string
                      example: some-uuid
                    createdAt:
                      type: string
                      example: "2024-04-28T20:21:26.854076419Z"
    Comment:
      type: object
      properties:
        id:
          type: string
          example: some-generated-uuid
        body:
          type: string
          example: some comment body
        user:
          $ref: '#/components/schemas/Profile'
        postID:
          type: string
          example: some-generated-uuid
        childrenCount:
          type: integer
          example: 1
        lastChild:
          type: object
          properties:
            id:
              type: string
              example: some-generated-uuid
            body:
              type: string
              example: some comment body
            user:
              $ref: '#/components/schemas/Profile'
            postID:
              type: string
              example: some-generated-uuid
            createdAt:
              type: string
              example: "2024-04-28T20:21:26.854076419Z"
        createdAt:
          type: string
          example: "2024-04-28T20:21:26.854076419Z"
    Meta:
      items:
        type: array
        items:
          type: object
          properties:
            totalItems:
              type: integer
              example: 20
            totalPages:
              type: integer
              example: 10
            current:
              type: integer
              example: 2
            next:
              type: integer
              example: 3
            previous:
              type: integer
              example: 1
            perPage:
              type: integer
              example: 10
    Post:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            example: some-generated-uuid
          userID:
            type: string
            example: some-generated-uuid
          visibility:
            type: string
            example: Public,Private
          type:
            type: string
            example: Post,Event
          createdAt:
            type: string
            example: "2024-04-28T20:21:26.854076419Z"
          payload:
            type: object
            properties:
              content:
                type: string
                example: Some post or event content
              attachments:
                type: array
              type:
                type: string
                example: Post,Coop,Marketplace
          commentsCount:
            type: integer
            example: 0
          reactionsCount:
            type: integer
            example: 0
          reaction:
            type: boolean
            example: false
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
